services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Para desarrollo, en producción activa la seguridad
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"  # Ajusta según los recursos de tu máquina
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch

  mysql:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: urban
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-puserpass"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    build: ./backend
    container_name: backend_service
    restart: always
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: userpass
      DB_NAME: urban
      JWT_SECRET: Canob19742013
      JWT_EXPIRES_IN: 24h
      EMAIL_USER: urbansneakershelp@gmail.com
      EMAIL_PASSWORD: ghqb mxka mfmj zofg 
      FRONTEND_URL: http://localhost:81
      GITHUB_CLIENT_ID: Ov23lifEAJCr9kGFhwP4
      GITHUB_CLIENT_SECRET: ffd49532c203baabc6a6a5f16d84bd8fa5a8c772
      ELASTICSEARCH_NODE: http://elasticsearch:9200
      ELASTICSEARCH_INDEX_PRODUCTS: urban_products
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    build: 
      context: ./frontend
      args:
        - VITE_GITHUB_CLIENT_ID=Ov23lifEAJCr9kGFhwP4
    container_name: frontend_service
    restart: always
    ports:
      - "81:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend

volumes:
  mysql_data:
  elasticsearch_data:
